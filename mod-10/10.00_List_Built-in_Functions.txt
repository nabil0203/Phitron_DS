List Built-in Functions: 

1. Constructor:
╔══════════════════════════════════════╦═════════════════════════════════════════════════════════════════════╦═════════════════╗
║                 Name                 ║                               Details                               ║ Time Complexity ║
╠══════════════════════════════════════╬═════════════════════════════════════════════════════════════════════╬═════════════════╣
║ list<type>l;                         ║ Construct a list with 0 elements.                                   ║ O(1)            ║
╠══════════════════════════════════════╬═════════════════════════════════════════════════════════════════════╬═════════════════╣
║ list<type>l(N);                      ║ Construct a list with N elements and the value will be garbage.     ║ O(N)            ║
╠══════════════════════════════════════╬═════════════════════════════════════════════════════════════════════╬═════════════════╣
║ list<type>l(N,V);                    ║ Construct a list with N elements and the value will be V.           ║ O(N)            ║
╠══════════════════════════════════════╬═════════════════════════════════════════════════════════════════════╬═════════════════╣
║ list<type>l(list2);                  ║ Construct a list by copying another list list2.                     ║ O(N)            ║
╠══════════════════════════════════════╬═════════════════════════════════════════════════════════════════════╬═════════════════╣
║ list<type>l(A,A+N);                  ║ Construct a list by copying all elements from an array A of size N. ║ O(N)            ║
╠══════════════════════════════════════╬═════════════════════════════════════════════════════════════════════╬═════════════════╣
║ list<type>l(v.begin(),v.end());      ║ Construct a list by copying all elements from a vector v.           ║ O(N)            ║
╚══════════════════════════════════════╩═════════════════════════════════════════════════════════════════════╩═════════════════╝


2. Iterators
╔════════════════╦═══════════════════════════════╦═════════════════╗
║      Name      ║            Details            ║ Time Complexity ║
╠════════════════╬═══════════════════════════════╬═════════════════╣
║ l.begin()      ║ Pointer to the first element. ║ O(1)            ║
╠════════════════╬═══════════════════════════════╬═════════════════╣
║ l.end()        ║ Pointer to the last element.  ║ O(1)            ║
╚════════════════╩═══════════════════════════════╩═════════════════╝


3. 
╔══════════════════════════════════════════════════════════╦═════════════════════════════════════════════════════════════════╦═══════════════════════════════════════════════════════════╗
║                           Name                           ║                             Details                             ║                      Time Complexity                      ║
╠══════════════════════════════════════════════════════════╬═════════════════════════════════════════════════════════════════╬═══════════════════════════════════════════════════════════╣
║ l= l2                                                    ║ Assign another list.                                            ║ O(N)                                                      ║
╠══════════════════════════════════════════════════════════╬═════════════════════════════════════════════════════════════════╬═══════════════════════════════════════════════════════════╣
║ l.push_back()                                            ║ Add an element to the tail.                                     ║ O(1)                                                      ║
╠══════════════════════════════════════════════════════════╬═════════════════════════════════════════════════════════════════╬═══════════════════════════════════════════════════════════╣
║ l.push_front()                                           ║ Add an element to the head.                                     ║ O(1)                                                      ║
╠══════════════════════════════════════════════════════════╬═════════════════════════════════════════════════════════════════╬═══════════════════════════════════════════════════════════╣
║ l.pop_back()                                             ║ Delete the tail.                                                ║ O(1)                                                      ║
╠══════════════════════════════════════════════════════════╬═════════════════════════════════════════════════════════════════╬═══════════════════════════════════════════════════════════╣
║ l.pop_front()                                            ║ Delete the head.                                                ║ O(1)                                                      ║
╠══════════════════════════════════════════════════════════╬═════════════════════════════════════════════════════════════════╬═══════════════════════════════════════════════════════════╣
║ l.insert()                                               ║ Insert elements at a specific position.                         ║ O(N+K); where K is the number of elements to be inserted. ║
╠══════════════════════════════════════════════════════════╬═════════════════════════════════════════════════════════════════╬═══════════════════════════════════════════════════════════╣
║ l.erase()                                                ║ Delete elements from a specific position.                       ║ O(N+K); where K is the number of elements to be deleted.  ║
╠══════════════════════════════════════════════════════════╬═════════════════════════════════════════════════════════════════╬═══════════════════════════════════════════════════════════╣
║ replace(l.begin(),l.end(),value,replace_value)           ║ Replace all the value with replace_value. Not under a list STL. ║ O(N)                                                      ║
╠══════════════════════════════════════════════════════════╬═════════════════════════════════════════════════════════════════╬═══════════════════════════════════════════════════════════╣
║ find(l.begin(),l.end(),V)                                ║ Find the value V. Not under a list STL.                         ║ O(N)                                                      ║
╚══════════════════════════════════════════════════════════╩═════════════════════════════════════════════════════════════════╩═══════════════════════════════════════════════════════════╝